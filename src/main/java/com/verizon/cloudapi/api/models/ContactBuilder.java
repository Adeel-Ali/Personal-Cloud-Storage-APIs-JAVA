/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/10/2016
 */
package com.verizon.cloudapi.api.models;

import java.util.*;

public class ContactBuilder {
    //the instance to build
    private Contact contact;

    /**
     * Default constructor to initialize the instance
     */
    public ContactBuilder() {
        contact = new Contact();
    }

    /**
     * Contact's given name
     */
    public ContactBuilder firstname(String firstname) {
        contact.setFirstname(firstname);
        return this;
    }

    /**
     * Contact's surname
     */
    public ContactBuilder lastname(String lastname) {
        contact.setLastname(lastname);
        return this;
    }

    /**
     * Origin of the contact
     */
    public ContactBuilder source(String source) {
        contact.setSource(source);
        return this;
    }

    /**
     * Arbitrary text associated with this contact
     */
    public ContactBuilder note(String note) {
        contact.setNote(note);
        return this;
    }

    /**
     * Timestamp the contact was created
     */
    public ContactBuilder created(String created) {
        contact.setCreated(created);
        return this;
    }

    /**
     * Timestamp the contact was last updated
     */
    public ContactBuilder modified(String modified) {
        contact.setModified(modified);
        return this;
    }

    /**
     * Marked true for emergency contacts
     */
    public ContactBuilder incaseofemergency(Boolean incaseofemergency) {
        contact.setIncaseofemergency(incaseofemergency);
        return this;
    }

    /**
     * Marked true for favorite contacts
     */
    public ContactBuilder favorite(Boolean favorite) {
        contact.setFavorite(favorite);
        return this;
    }

    /**
     * List of contact's telephone numbers
     */
    public ContactBuilder tel(List<ContactsTel> tel) {
        contact.setTel(tel);
        return this;
    }

    /**
     * List of contact's email addresses
     */
    public ContactBuilder email(List<ContactsEmail> email) {
        contact.setEmail(email);
        return this;
    }

    /**
     * List of contact's addresses
     */
    public ContactBuilder address(List<ContactsAddress> address) {
        contact.setAddress(address);
        return this;
    }

    /**
     * List of contact's IM addresses
     */
    public ContactBuilder im(List<ContactsIm> im) {
        contact.setIm(im);
        return this;
    }

    public ContactBuilder dedupe(String dedupe) {
        contact.setDedupe(dedupe);
        return this;
    }

    /**
     * Contact version.  This number increases when the contact is updated
     */
    public ContactBuilder version(Integer version) {
        contact.setVersion(version);
        return this;
    }

    /**
     * Unique identifier for this contact
     */
    public ContactBuilder id(String id) {
        contact.setId(id);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Contact build() {
        return contact;
    }
}