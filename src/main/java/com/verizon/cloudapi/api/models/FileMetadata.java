/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/10/2016
 */
package com.verizon.cloudapi.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class FileMetadata 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5145220044648805516L;
    private String name;
    private String parentPath;
    private String checksum;
    private boolean contentAccessible;
    private String contentToken;
    private boolean deleted;
    private String extension;
    private long size;
    private Object systemAttributes;
    private int version;
    private String versionCreated;
    private List<ViewUid> viewUid;
    private String uri;
    private List<ShareAssociation> shareAssociation;
    /** GETTER
     * The name of the file
     */
    @JsonGetter("name")
    public String getName ( ) { 
        return this.name;
    }
    
    /** SETTER
     * The name of the file
     */
    @JsonSetter("name")
    public void setName (String value) { 
        this.name = value;
    }
 
    /** GETTER
     * The folder where the file is located
     */
    @JsonGetter("parentPath")
    public String getParentPath ( ) { 
        return this.parentPath;
    }
    
    /** SETTER
     * The folder where the file is located
     */
    @JsonSetter("parentPath")
    public void setParentPath (String value) { 
        this.parentPath = value;
    }
 
    /** GETTER
     * The file content's SHA-256 checksum value
     */
    @JsonGetter("checksum")
    public String getChecksum ( ) { 
        return this.checksum;
    }
    
    /** SETTER
     * The file content's SHA-256 checksum value
     */
    @JsonSetter("checksum")
    public void setChecksum (String value) { 
        this.checksum = value;
    }
 
    /** GETTER
     * If false, the file content is protected by copywrite and is not accessible to the user
     */
    @JsonGetter("contentAccessible")
    public boolean getContentAccessible ( ) { 
        return this.contentAccessible;
    }
    
    /** SETTER
     * If false, the file content is protected by copywrite and is not accessible to the user
     */
    @JsonSetter("contentAccessible")
    public void setContentAccessible (boolean value) { 
        this.contentAccessible = value;
    }
 
    /** GETTER
     * A unique string representing the file. Will change if file content is updated.  Required for certain APIs, such as /thumbnails
     */
    @JsonGetter("contentToken")
    public String getContentToken ( ) { 
        return this.contentToken;
    }
    
    /** SETTER
     * A unique string representing the file. Will change if file content is updated.  Required for certain APIs, such as /thumbnails
     */
    @JsonSetter("contentToken")
    public void setContentToken (String value) { 
        this.contentToken = value;
    }
 
    /** GETTER
     * If true, the file has been logically deleted
     */
    @JsonGetter("deleted")
    public boolean getDeleted ( ) { 
        return this.deleted;
    }
    
    /** SETTER
     * If true, the file has been logically deleted
     */
    @JsonSetter("deleted")
    public void setDeleted (boolean value) { 
        this.deleted = value;
    }
 
    /** GETTER
     * The file's extension, as extracted from the filename
     */
    @JsonGetter("extension")
    public String getExtension ( ) { 
        return this.extension;
    }
    
    /** SETTER
     * The file's extension, as extracted from the filename
     */
    @JsonSetter("extension")
    public void setExtension (String value) { 
        this.extension = value;
    }
 
    /** GETTER
     * The size of the file, in bytes
     */
    @JsonGetter("size")
    public long getSize ( ) { 
        return this.size;
    }
    
    /** SETTER
     * The size of the file, in bytes
     */
    @JsonSetter("size")
    public void setSize (long value) { 
        this.size = value;
    }
 
    /** GETTER
     * A set of file attributes.  The attribute set will vary depending on file type
     */
    @JsonGetter("systemAttributes")
    public Object getSystemAttributes ( ) { 
        return this.systemAttributes;
    }
    
    /** SETTER
     * A set of file attributes.  The attribute set will vary depending on file type
     */
    @JsonSetter("systemAttributes")
    public void setSystemAttributes (Object value) { 
        this.systemAttributes = value;
    }
 
    /** GETTER
     * File version.  This number increases when the file is updated
     */
    @JsonGetter("version")
    public int getVersion ( ) { 
        return this.version;
    }
    
    /** SETTER
     * File version.  This number increases when the file is updated
     */
    @JsonSetter("version")
    public void setVersion (int value) { 
        this.version = value;
    }
 
    /** GETTER
     * Creation timestamp for the file's current version, in ISO-8601 format
     */
    @JsonGetter("versionCreated")
    public String getVersionCreated ( ) { 
        return this.versionCreated;
    }
    
    /** SETTER
     * Creation timestamp for the file's current version, in ISO-8601 format
     */
    @JsonSetter("versionCreated")
    public void setVersionCreated (String value) { 
        this.versionCreated = value;
    }
 
    /** GETTER
     * Array of viewUid
     */
    @JsonGetter("viewUid")
    public List<ViewUid> getViewUid ( ) { 
        return this.viewUid;
    }
    
    /** SETTER
     * Array of viewUid
     */
    @JsonSetter("viewUid")
    public void setViewUid (List<ViewUid> value) { 
        this.viewUid = value;
    }
 
    /** GETTER
     * Unique identifier of the resource
     */
    @JsonGetter("uri")
    public String getUri ( ) { 
        return this.uri;
    }
    
    /** SETTER
     * Unique identifier of the resource
     */
    @JsonSetter("uri")
    public void setUri (String value) { 
        this.uri = value;
    }
 
    /** GETTER
     * Array of shareAssociation
     */
    @JsonGetter("shareAssociation")
    public List<ShareAssociation> getShareAssociation ( ) { 
        return this.shareAssociation;
    }
    
    /** SETTER
     * Array of shareAssociation
     */
    @JsonSetter("shareAssociation")
    public void setShareAssociation (List<ShareAssociation> value) { 
        this.shareAssociation = value;
    }
 
}
 