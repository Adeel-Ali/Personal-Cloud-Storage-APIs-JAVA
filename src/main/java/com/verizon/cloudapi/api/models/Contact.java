/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/10/2016
 */
package com.verizon.cloudapi.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class Contact 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4996932329157953800L;
    private String firstname;
    private String lastname;
    private String source;
    private String note;
    private String created;
    private String modified;
    private Boolean incaseofemergency;
    private Boolean favorite;
    private List<ContactsTel> tel;
    private List<ContactsEmail> email;
    private List<ContactsAddress> address;
    private List<ContactsIm> im;
    private String dedupe;
    private Integer version;
    private String id;
    /** GETTER
     * Contact's given name
     */
    @JsonGetter("firstname")
    public String getFirstname ( ) { 
        return this.firstname;
    }
    
    /** SETTER
     * Contact's given name
     */
    @JsonSetter("firstname")
    public void setFirstname (String value) { 
        this.firstname = value;
    }
 
    /** GETTER
     * Contact's surname
     */
    @JsonGetter("lastname")
    public String getLastname ( ) { 
        return this.lastname;
    }
    
    /** SETTER
     * Contact's surname
     */
    @JsonSetter("lastname")
    public void setLastname (String value) { 
        this.lastname = value;
    }
 
    /** GETTER
     * Origin of the contact
     */
    @JsonGetter("source")
    public String getSource ( ) { 
        return this.source;
    }
    
    /** SETTER
     * Origin of the contact
     */
    @JsonSetter("source")
    public void setSource (String value) { 
        this.source = value;
    }
 
    /** GETTER
     * Arbitrary text associated with this contact
     */
    @JsonGetter("note")
    public String getNote ( ) { 
        return this.note;
    }
    
    /** SETTER
     * Arbitrary text associated with this contact
     */
    @JsonSetter("note")
    public void setNote (String value) { 
        this.note = value;
    }
 
    /** GETTER
     * Timestamp the contact was created
     */
    @JsonGetter("created")
    public String getCreated ( ) { 
        return this.created;
    }
    
    /** SETTER
     * Timestamp the contact was created
     */
    @JsonSetter("created")
    public void setCreated (String value) { 
        this.created = value;
    }
 
    /** GETTER
     * Timestamp the contact was last updated
     */
    @JsonGetter("modified")
    public String getModified ( ) { 
        return this.modified;
    }
    
    /** SETTER
     * Timestamp the contact was last updated
     */
    @JsonSetter("modified")
    public void setModified (String value) { 
        this.modified = value;
    }
 
    /** GETTER
     * Marked true for emergency contacts
     */
    @JsonGetter("incaseofemergency")
    public Boolean getIncaseofemergency ( ) { 
        return this.incaseofemergency;
    }
    
    /** SETTER
     * Marked true for emergency contacts
     */
    @JsonSetter("incaseofemergency")
    public void setIncaseofemergency (Boolean value) { 
        this.incaseofemergency = value;
    }
 
    /** GETTER
     * Marked true for favorite contacts
     */
    @JsonGetter("favorite")
    public Boolean getFavorite ( ) { 
        return this.favorite;
    }
    
    /** SETTER
     * Marked true for favorite contacts
     */
    @JsonSetter("favorite")
    public void setFavorite (Boolean value) { 
        this.favorite = value;
    }
 
    /** GETTER
     * List of contact's telephone numbers
     */
    @JsonGetter("tel")
    public List<ContactsTel> getTel ( ) { 
        return this.tel;
    }
    
    /** SETTER
     * List of contact's telephone numbers
     */
    @JsonSetter("tel")
    public void setTel (List<ContactsTel> value) { 
        this.tel = value;
    }
 
    /** GETTER
     * List of contact's email addresses
     */
    @JsonGetter("email")
    public List<ContactsEmail> getEmail ( ) { 
        return this.email;
    }
    
    /** SETTER
     * List of contact's email addresses
     */
    @JsonSetter("email")
    public void setEmail (List<ContactsEmail> value) { 
        this.email = value;
    }
 
    /** GETTER
     * List of contact's addresses
     */
    @JsonGetter("address")
    public List<ContactsAddress> getAddress ( ) { 
        return this.address;
    }
    
    /** SETTER
     * List of contact's addresses
     */
    @JsonSetter("address")
    public void setAddress (List<ContactsAddress> value) { 
        this.address = value;
    }
 
    /** GETTER
     * List of contact's IM addresses
     */
    @JsonGetter("im")
    public List<ContactsIm> getIm ( ) { 
        return this.im;
    }
    
    /** SETTER
     * List of contact's IM addresses
     */
    @JsonSetter("im")
    public void setIm (List<ContactsIm> value) { 
        this.im = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("dedupe")
    public String getDedupe ( ) { 
        return this.dedupe;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("dedupe")
    public void setDedupe (String value) { 
        this.dedupe = value;
    }
 
    /** GETTER
     * Contact version.  This number increases when the contact is updated
     */
    @JsonGetter("version")
    public Integer getVersion ( ) { 
        return this.version;
    }
    
    /** SETTER
     * Contact version.  This number increases when the contact is updated
     */
    @JsonSetter("version")
    public void setVersion (Integer value) { 
        this.version = value;
    }
 
    /** GETTER
     * Unique identifier for this contact
     */
    @JsonGetter("id")
    public String getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * Unique identifier for this contact
     */
    @JsonSetter("id")
    public void setId (String value) { 
        this.id = value;
    }
 
}
 